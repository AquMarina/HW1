# 1
# Вручную создайте список с целыми числами, которые повторяются. Получите новый список, который содержит уникальные (без повтора) элементы исходного списка.
#
#
# *Подготовьте два решения, короткое и длинное, которое
# не использует другие коллекции помимо списков.

# data = [42, 73, 5, 42, 42, 2, 3, 7, 73, 42]

# data_new = list(set(data)) # получили множество (set), не хранятся дубли, только уникальные элементы. (list) сделали снова список множеств.
# print(sorted(data_new)) # сортировка списка для вывода.
# data.sort() # сортировка списка, изменяет исходный список.
# print(data)
# data_new = []
# for item in data:
#     if item not in data_new:
#         data_new.append(item)
# print(sorted(data_new)) # сортировка списка для вывода.
# data.sort() # сортировка списка, изменяет исходный список.
# print(data)

# 2
# Пользователь вводит данные. Сделайте проверку данных
# и преобразуйте если возможно в один из вариантов ниже:
# Целое положительное число
# Вещественное положительное или отрицательное число
# Строку в нижнем регистре, если в строке есть
# хотя бы одна заглавная буква
# Строку в нижнем регистре в остальных случаях

# data = input('Введите строку: ')
#
# if data.isdigit(): # проверяет, состоит ли строка из чисел.
#     result = int(data)
# elif data.replace('.', '', 1).replace('-', '', 1).isdigit() and '-' not in data[1:]:
#     result = float(data)
# elif data != data.lower():
#     result = data.lower()
# else:
#     result = data.upper()
# print(result)


# 3
# Создайте вручную кортеж содержащий элементы разных типов.
# Получите из него словарь списков, где:
# ключ — тип элемента,
# значение — список элементов данного типа.

# data = (42, 73, 3.14, 'Hello world!', None, True, 'Text', 100500.2, False)
# my_dict = dict()
# for item in data:
#     type_item = type(item)
#     if type_item not in my_dict:
#         my_dict[type_item] = [item]
#     else:
#         my_dict[type_item].append(item)
# print(my_dict)

# result = {}
# for item in data:
#     key = result.setdefault(type(item), list()) # setdefault добавляет новый ключ-значение, если нет такого ключа в словаре, но при этом возвращает згачение из словаря, если есть значение в словаре.
#     key.append(item)
#
# print(result)

# 4
# Создайте вручную список с повторяющимися элементами.
# Удалите из него все элементы, которые встречаются дважды.

# data = [42, 73, 5, 42, 42, 2, 3, 7, 73, 42]
# count = 2
# for item in set(data):
#     if data.count(item) == 2:
#         for _ in range(count):
#             data.remove(item)
# print(*data)

# 5
# Создайте вручную список с повторяющимися целыми числами.
# Сформируйте список с порядковыми номерами
# нечётных элементов исходного списка.
# Нумерация начинается с единицы.

# data = [42, 73, 5, 42, 42, 2, 3, 7, 73, 42]
# result = []
# for i, value in enumerate(data, start=1):
#     if value % 2 == 1:
#         result.append(i)
# print(result)
#
# position = [i + 1 for i, x in enumerate(data) if x % 2 != 0]
# print(position)

#6
# Пользователь вводит строку текста. Вывести каждое слово с новой строки.
# Строки нумеруются начиная с единицы.
# Слова выводятся отсортированными согласно кодировки Unicode.
# Текст выравнивается по правому краю так, чтобы у самого длинного
# слова был один пробел между ним и номером строки.