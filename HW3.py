# 1
# Удаление дубликатов из списка
# Дан список повторяющихся элементов. Вернуть список с дублирующимися
# элементами. В результирующем списке не должно быть дубликатов.

# elements = [1, 2, 2, 3, 4, 4, 4, 5, 5]
# duplicates = []
# for x in elements:
# # Если элемент встречается больше одного раза и его еще нет в списке дубликатов
#     if elements.count(x) > 1 and x not in duplicates:
#         duplicates.append(x)
# print(elements)
# print(duplicates)

# 2
# Поиск наибольшего числа в списке
# Напишите программу, которая принимает список чисел через строку и
# возвращает наибольшее число в этом списке.

# numbers = [int(x) for x in input("Введите числа через пробел: ").split()]
# max_number = numbers[0]
# for num in numbers:
# # Если текущее число больше, чем текущее максимальное число, обновляем max_number
#     if num > max_number:
#         max_number = num
# # Выводим наибольшее число в списке
# print(max_number)

# 3
# Проверка палиндрома
# Напишите программу, которая принимает строку и определяет, является ли она
# палиндромом (читается одинаково с обеих сторон).

# string = input("Введите строку: ").lower()
# odd_chars = set()
# for char in string:
# # Если символ уже есть в множестве, убираем его
#     if char in odd_chars:
#         odd_chars.remove(char)
# # Если символа нет в множестве, добавляем его
#     else:
#         odd_chars.add(char)
# if len(odd_chars) <= 1:
#     print("Строка является палиндромом")
# else:
#     print("Строка не является палиндромом")

# 4
# Генерация паролей
# Напишите программу, которая генерирует случайный пароль заданной длины,
# состоящий из букв, цифр и специальных символов.

# import random # Импортируем модуль random для генерации случайных чисел
# import string # Импортируем модуль string для работы со строками и символами
# # Принимаем длину пароля от пользователя
# length = int(input("Введите длину пароля: "))
# # Определяем набор символов, из которых будет генерироваться пароль
# # Включаем буквы (заглавные и строчные), цифры и специальные символы
# characters = string.ascii_letters + string.digits + string.punctuation
# # Генерируем случайный пароль заданной длины
# # random.choice выбирает случайный символ из набора 'characters' для каждой позиции
# password = ''.join(random.choice(characters) for i in range(length))
# # Выводим сгенерированный пароль
# print(password)

# 5
# Нахождение анаграмм
# Напишите программу, которая принимает два слова и определяет, являются ли
# они анаграммами.

# Принимаем два слова от пользователя
# word1 = input("Введите первое слово: ")
# word2 = input("Введите второе слово: ")
# Проверяем, одинаковая ли длина у слов
# Если длина слов не совпадает, они не могут быть анаграммами
# if len(word1) != len(word2):
#     print("Слова не являются анаграммами")
# else:
# # Создаем словари для подсчета частоты каждого символа в словах
#     char_count1 = {}
#     char_count2 = {}
# # Подсчитываем символы в первом слове
#     for char in word1:
#         if char in char_count1:
#             char_count1[char] += 1
#         else:
#             char_count1[char] = 1
#             # Подсчитываем символы во втором слове
#     for char in word2:
#         if char in char_count2:
#             char_count2[char] += 1
#         else:
#             char_count2[char] = 1
#             # Сравниваем оба словаря
#             # Если частоты всех символов совпадают, слова являются анаграммами
#     if char_count1 == char_count2:
#         print("Слова являются анаграммами")
#     else:
#         print("Слова не являются анаграммами")
