# 1
# Модуль для подсчета количества повторений слов.
# Создайте модуль с функцией, которая получает список слов и возвращает
# словарь, в котором ключи — это слова, а значения — количество их повторений
# в списке.


# import word_count
# print(word_count.count_word_occurrences(['apple', 'banana', 'apple', 'orange']))

# 2
# Модуль для удаления дублирующихся подряд символов
# Напишите модуль с функцией, которая принимает строку и возвращает строку с
# удаленными дублирующимися подряд идущими символами. Например, строка
# "aabbccaa" должна быть преобразована в "abca".

# import remove_duplicates
# print(remove_duplicates.remove_consecutive_duplicates('aaabbcaaa'))

# 3
# Модуль для нахождения уникальных для обоих списков элементов
# Создайте модуль с функцией, которая принимает два списка и возвращает
# список, содержащий только элементы, которые уникальны для обоих списков.

# import unique_to_both_lists
# print(unique_to_both_lists.unique_to_both_lists([1, 2, 3], [3, 4,
# 5]))

# 4
# Модуль для проверки даты
# Создайте модуль и напишите в нём функцию, которая получает на вход дату в
# формате DD.MM.YYYY Функция возвращает истину, если дата может существовать
# или ложь, если такая дата невозможна. Для простоты договоримся, что год
# может быть в диапазоне [1, 9999]. Весь период (1 января 1 года - 31 декабря 9999
# года) действует Григорианский календарь. Проверку года на високосность
# вынести в отдельную защищённую функцию.

# import sys
# import date_validator
#
#
# if len(sys.argv) != 2:
#     print("Usage: python date_validator.py DD.MM.YYYY")
#     sys.exit(1)
#
# date_input = sys.argv[1]
# if date_validator.is_valid_date(date_input):
#     print("True")
# else:
#     print("False")


# 5
#  Модуль для проверки ферзей
# Добавьте в пакет, созданный на семинаре шахматный модуль. Внутри него
# напишите код, решающий задачу о 8 ферзях. Известно, что на доске 8×8 можно
# расставить 8 ферзей так, чтобы они не били друг друга. Вам дана расстановка 8
# ферзей на доске, определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел, каждое число от 1 до 8 -
# координаты 8 ферзей. Если ферзи не бьют друг друга верните истину, а если бьют
# - ложь.

# import sys
# import chess
# if len(sys.argv) != 9:
#     print("Usage: python main.py row1 col1 row2 col2 ... row8 col8")
#     sys.exit(1)
#
# positions = [(int(sys.argv[i]), int(sys.argv[i+1])) for i in range(1, len(sys.argv), 2)]
# if chess.are_queens_safe(positions):
#     print("True")
# else:
#     print("False")


